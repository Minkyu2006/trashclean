#AWS Beanstalk used 5000 Port
server.port=5000
server.servlet.session.timeout=360m
#Log
spring.output.ansi.enabled = ALWAYS

logging.level.root=INFO
logging.level.org.hibernate=INFO
logging.level.kr.co.broadwave=${ACI_LOG_LEVEL}
logging.file.max-history=5
logging.file=./logs/aci.log

#aci.aws
aci.aws.api.key=${ACI_API_KEY}
aci.aws.api.baseurl =${ACI_API_BASE_URL}
aci.aws.iot.access.endpoint=${ACI_IOT_ACCESS_ENDPOINT}
aci.aws.iot.access.id=${ACI_IOT_ACCESS_ID}
aci.aws.iot.access.key=${ACI_IOT_ACCESS_KEY}
aci.aws.s3.access.id=${ACI_S3_ACCESS_ID}
aci.aws.s3.access.key=${ACI_S3_ACCESS_KEY}
aci.aws.s3.bucket=${ACI_S3_BUCKET}
aci.aws.region=${ACI_AWS_REGION}
aci.aws.s3.bucket.url=${ACI_S3_BUCKET_URL}

#naverAPI
aci.naver.client.id=${ACI_NAVER_CLIENTID}
aci.naver.client.secret=${ACI_NAVER_CLIENTSECRET}

#FileUpload(S3 bucket path)
base.upload.directory=uploadfiles

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
# ===============================
# = ExcelDownLoad
# ===============================
spring.mvc.contentnegotiation.favor-parameter=true
spring.mvc.contentnegotiation.favor-path-extension=true
spring.mvc.contentnegotiation.media-types.xls=application/vnd.ms-excel


# ===============================
# = DATA SOURCE
# ===============================

## Set here configurations for the database connection
spring.datasource.url=jdbc:mariadb://${ACI_DATASOURCE_HOST}:${ACI_DATASOURCE_PORT}/${ACI_DATASOURCE_DBNAME}
spring.datasource.username = ${ACI_DATASOURCE_DBUSER}
spring.datasource.password = ${ACI_DATASOURCE_DBPASSWORD}
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1



# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=${ACI_JPA_LOG_LEVEL}
spring.jpa.properties.hibernate.use_sql_comments=${ACI_JPA_LOG_LEVEL}
#logging.level.org.hibernate.type.descriptor.sql=trace
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=validate
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
# Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
spring.jpa.open-in-view=false

#DBCP Setting
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.idleTimeout=10000
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.validation-timeout=10000
spring.datasource.hikari.maxLifetime=580000
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true
spring.datasource.hikari.data-source-properties.useLocalSessionState=true
spring.datasource.hikari.data-source-properties.useLocalTransactionState=true
spring.datasource.hikari.data-source-properties.rewriteBatchedStatements=true
spring.datasource.hikari.data-source-properties.cacheResultSetMetadata=true
spring.datasource.hikari.data-source-properties.cacheServerConfiguration=true
spring.datasource.hikari.data-source-properties.elideSetAutoCommits=true
spring.datasource.hikari.data-source-properties.maintainTimeStats=false


